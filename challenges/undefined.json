{
  "challenge_id": "CC-007",
  "title": "Simple Grade Calculator",
  "description": "Create a program that calculates a student's average grade from a list of scores and assigns a letter grade based on the average. This challenge focuses on using lists, loops, and conditional statements in a practical scenario.",
  "requirements": [
    "1. The program should accept a list of numerical scores (integers or floats) as input.",
    "2. The program should calculate the average of the scores in the list.",
    "3. The program should use conditional statements (if/elif/else) to determine the letter grade based on the following scale:\n\t*   90-100: A\n\t*   80-89: B\n\t*   70-79: C\n\t*   60-69: D\n\t*   Below 60: F",
    "4. The program should return both the calculated average and the assigned letter grade as a tuple: (average, letter_grade).",
    "5. Handle the case where the input list is empty. In this case, return an average of 0 and a letter grade of 'F'."
  ],
  "examples": [
    {
      "input": "[85, 92, 78, 95, 88]",
      "output": "(87.6, 'B')"
    },
    {
      "input": "[55, 62, 48, 59, 65]",
      "output": "(57.8, 'F')"
    },
    {
      "input": "[98, 92, 95, 100, 97]",
      "output": "(96.4, 'A')"
    },
    {
      "input": "[]",
      "output": "(0, 'F')"
    }
  ],
  "hints": [
    "1. Start by creating a function that takes a list of scores as input.",
    "2. Use a loop to iterate through the list and calculate the sum of the scores.",
    "3. Divide the sum by the number of scores to get the average.",
    "4. Use if/elif/else statements to assign the correct letter grade based on the average.",
    "5. Remember to handle the case where the list is empty before calculating the average.",
    "6. Consider using the `len()` function to determine the number of items in the list.",
    "7.  Consider using `sum()` to sum the values in the list (after handling the empty list case)"
  ],
  "difficulty": 5,
  "topics": [
    "Lists",
    "Loops",
    "Conditional Statements (if/elif/else)",
    "Functions",
    "Data Types (Integers, Floats)",
    "Tuples"
  ]
}