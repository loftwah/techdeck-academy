name: Process Letters to Mentor

# Grant write permissions for contents
permissions:
  contents: write

on:
  push:
    paths:
      - 'letters/to-mentor/**.md' # Trigger on changes to markdown files in to-mentor
  workflow_dispatch: # Allow manual triggering

env:
  NODE_VERSION: '20'

jobs:
  process-letters:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to compare commits for changed files

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Find Changed Files
        id: changed-files
        run: |
          # Get list of files changed in the push event within the target directory
          # For workflow_dispatch, we might need a different approach (e.g., list all files)
          # Using git diff --name-only HEAD^ HEAD is common for push events
          # Adjust based on exact trigger needs and potential edge cases
          echo "Finding changed files in letters/to-mentor..."
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Compare with previous commit
            FILES=$(git diff --name-only HEAD^ HEAD -- letters/to-mentor/**.md)
          else
            # For manual trigger, maybe process all files? Or require input?
            # For now, let's list all md files in the dir for manual runs
            FILES=$(find letters/to-mentor -maxdepth 1 -name '*.md' -type f)
          fi
          
          # Check if FILES is empty
          if [[ -z "$FILES" ]]; then
            echo "No relevant markdown files changed/found in letters/to-mentor."
            echo "changed_files=''" >> $GITHUB_OUTPUT
            exit 0 # Exit successfully, nothing to process
          fi
          
          # Format files for the next step (e.g., space-separated)
          # Use xargs to handle newlines correctly
          FORMATTED_FILES=$(echo "$FILES" | xargs)
          echo "Files to process: $FORMATTED_FILES"
          echo "changed_files=$FORMATTED_FILES" >> $GITHUB_OUTPUT


      - name: Process Changed Letters
        # Only run if changed_files step found files
        if: steps.changed-files.outputs.changed_files != ''
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }} # Might be needed if sending email confirmations
          CHANGED_FILES: ${{ steps.changed-files.outputs.changed_files }}
        run: |
          node -e "
            // We'll need to import processing functions here
            import('./dist/index.js').then(async ({ /* import necessary functions */ }) => {
              const filesToProcess = process.env.CHANGED_FILES.split(' ');
              console.log('Processing files:', filesToProcess);

              for (const filePath of filesToProcess) {
                if (!filePath) continue; // Skip empty entries if any

                const fileName = require('path').basename(filePath);

                if (fileName === 'introduction.md') {
                  console.log('Handling introduction.md...');
                  // TODO: Implement logic:
                  // 1. Read student profile (need readStudentProfile function)
                  // 2. Check profile.completedChallenges
                  // 3. If > 0, archive introduction.md (need archive function)
                  // 4. If === 0, do nothing (leave for send-challenge workflow)
                  console.log('Introduction handling logic needs implementation.');

                } else {
                  console.log(`Processing general letter: ${fileName}`);
                  // TODO: Implement logic for other .md files:
                  // 1. Read file content (need readFile function)
                  // 2. Generate AI response (need generateLetterResponse function)
                  // 3. Save response to letters/from-mentor/ (need writeFile function)
                  // 4. Archive the processed letter (move from to-mentor to archive)
                  console.log('General letter processing logic needs implementation.');
                }
              }
            });
          "

      - name: Commit changes
        # Only run if files were potentially processed
        if: steps.changed-files.outputs.changed_files != ''
        run: |
          git config --local user.email "academy@techdeck.life"
          git config --local user.name "TechDeck Academy Bot"
          # Add specific paths that might have changed
          git add letters/from-mentor/ letters/archive/ letters/to-mentor/ 
          # Use 'git diff --staged --quiet' to check if there are changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Process letters in to-mentor directory"
            git push
          else
            echo "No changes to commit after processing letters."
          fi 