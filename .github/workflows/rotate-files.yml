name: Rotate and Archive Files

# Grant write permissions for contents
permissions:
  contents: write

on:
  schedule:
    # Runs daily at 01:00 UTC
    - cron: '0 1 * * *' 
  workflow_dispatch:
    inputs:
      forceRotation:
        description: "Force rotation even if conditions aren't met"
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: '20'

jobs:
  rotate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build # Assuming this compiles scripts/*.ts to dist/scripts/*.js

      - name: Check if rotation needed
        id: check-rotation
        # Pass workflow input to the script via env var
        env: 
          INPUT_FORCEROTATION: ${{ github.event.inputs.forceRotation }}
        # Run the compiled TS script and capture its stdout
        run: |
          output=$(node dist/scripts/check-rotation-needed.js)
          echo "Output from script: $output"
          echo "should_rotate=$output" >> $GITHUB_OUTPUT

      - name: Perform Rotation (if needed)
        if: steps.check-rotation.outputs.should_rotate == 'true'
        run: |
          echo "Rotation needed, performing rotation..."
          # Add commands here to perform the actual rotation/archiving
          # e.g., call another script: node dist/scripts/perform-rotation.js
          # Or run git commands to commit changes
          # Placeholder:
          echo "Rotation logic would execute here."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed if committing changes

      - name: No Rotation Needed
        if: steps.check-rotation.outputs.should_rotate == 'false'
        run: |
          echo "Rotation conditions not met. Skipping rotation."

      - name: Generate rotation report
        if: steps.check-rotation.outputs.should_rotate == 'true'
        run: |
          # Create report directory if it doesn't exist
          mkdir -p progress/cleanup-reports

          # Generate report
          {
            echo "# File Rotation Report"
            echo "Date: $(date -u)"
            echo
            echo "## Statistics"
            echo "- Challenges: $(ls -1 challenges/*.json 2>/dev/null | wc -l) files"
            echo "- Submissions: $(ls -1 submissions/*.json 2>/dev/null | wc -l) files"
            echo "- Feedback: $(ls -1 feedback/*.json 2>/dev/null | wc -l) files"
            echo
            echo "## Archive Counts"
            echo "- Archived Challenges: $(ls -1 archive/challenges/**/*.json 2>/dev/null | wc -l) files"
            echo "- Archived Submissions: $(ls -1 archive/submissions/**/*.json 2>/dev/null | wc -l) files"
            echo "- Archived Feedback: $(ls -1 archive/feedback/**/*.json 2>/dev/null | wc -l) files"
          } > "progress/cleanup-reports/$(date +%Y-%m)-rotation.md"

      - name: Commit changes
        if: success() && steps.check-rotation.outputs.should_rotate == 'true'
        run: |
          git config --local user.email "academy@techdeck.life"
          git config --local user.name "TechDeck Academy Bot"
          git add .
          git commit -m "Monthly file rotation and cleanup" || echo "No changes to commit"
          git push 